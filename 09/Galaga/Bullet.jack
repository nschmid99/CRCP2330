class Bullet{
	field int x, y; // screen location of the bullet 
   field int r; // radius of  bullet
   field int data;
   field List next;

   /** Constructs a new bullet with a given location and size. */
   /*constructor Bullet new(int Ax, int Ay, int Ar) {
      let x = Ax;
      let y = Ay;
      let r= Ar;
      return this;
   }*/

   constructor Bullet new(int bullet, List blt, int Ax, int Ay, int Ar){
       let data = bullet;       // the identifiers car and cdr are used in 
        let next = blt;       // memory of the Lisp programming language
        let x=Ax;
        let y=Ay;
        let r=Ar;
        return this;
   }

   /** Disposes this square. */
   method void dispose() {
   if( ~(next = null)){
      do next.dispose();
   }
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the square on the screen. */
   method void draw() {
        var List current;    // initializes current to the first item
        let current = this;  // of this list
        while (~(current = null)) {
              do current.getData();
            do Screen.setColor(true);
            do Screen.drawCircle(x, y, r);
            let current = current.getNext();
        }
        return;
    }
method int getY(){
   return y;
}

   method void erase(){
      do Screen.setColor(false);
      do Screen.drawCircle(x, y, r);
      return;
   }
   
   /** Moves the square up by 2 pixels. */
   method void moveUp() {
      if (y > 0) {
         do Screen.setColor(false);
         do Screen.drawCircle(x,y +1, r);
         let y = y - 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y-1, r);
         do Sys.wait(10);
      }
      return;
   }

   
}