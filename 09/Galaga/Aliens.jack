class Aliens {

   field int x;
   field int y;
   field int bPosx;
   field int bPosy;
   field int size;
   field int dead;
   field int pos;
   field int direction;


constructor Aliens new(int Nx, int Ny, int Nsize){
   let x=Nx;
   let y=Ny;
   let size=Nsize;
   let dead=0;
      
   do draw();
   // do drawBullet();

   return this;
}

method void draw(){   //draws aliens
if (dead=0) {
   do Screen.setColor(true);
   do Screen.drawRectangle(x,y,x+size,y+size);
  
   do moveLeft();
}
   return;
}


method void dispose(){    //erases alien from screen
let dead=1;
   do Screen.setColor(false);
    do Screen.drawRectangle(x,y,x+size,y+size);
    do Screen.setColor(true);
     do Memory.deAlloc(this);
   return;
}

method void eraseAlien(){
let dead=1;
   do Screen.setColor(false);
   let x=0;
   let y=0;
    do Screen.drawRectangle(x,y,x+size,y+size);
   do Screen.setColor(true);

   return;
}


method int getX(){ //get x to check if equal to bullet pos so alien can die
  return x;
}

method int getY(){    //get y to check if equal to bullet pos so alien can die
  return y;
}

method int getPos(){
  return pos;
}

method int deadAlien(){
  return dead;
}

method int getDir(){
  return direction;
}

method void chngDirection(){
  if(direction=0){
  let  direction=1;
  }
  else{
  let direction=0;
  }
  return;
}

method void moveLeft() {  //moves alien left. currently not called
      if (dead=0) {
         do Screen.setColor(false);
         do Screen.drawRectangle((x +size)- 1, y, x + size, y + size);
         let x = x - 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x  + 1, y + size);
         
      }

    
      return;
   }
   

   method void moveRight() {    //moves alien right. currently not called
      if (dead=0) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + 1, y + size);
         let x = x + 2;
         do Screen.setColor(true);
         do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
         
      }
    
      return;
   }

}

