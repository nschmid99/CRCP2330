class Game{

	field Spaceship spaceship; // the spaceship
	field Aliens alien; //the aliens

	field int pos; //alien position
  field  int x, x2;
  field int length;
  field int  y,y2;
  field int i,j;
   field int direction; // the spaceships's current direction: 
                        // 0=none, 3=left, 4=right

   /** Constructs a new Square Game. */
   constructor Game new() {
      let spaceship = Spaceship.new(200, 100, 10);
      let alien= Aliens.new (5,55,15,65);
      let direction = 0;  // initial state is no movement
      let pos = 0;

      return this;
   }

 
  method void dispose() {
      do spaceship.dispose();
      do alien.dispose();
      do Memory.deAlloc(this);
      return;
   }

   
   method void moveSpaceship() {
      if (direction = 3) { do spaceship.moveLeft(); }
      if (direction = 4) { do spaceship.moveRight(); }
      do Sys.wait(5);  // delays the next movement
      return;
   }
/*  method void moveAliens() {
   if (pos > 0) { do aliens.moveLeft(); 
  let pos=pos+2;}
   if (pos + 10 < 510) { do aliens.moveRight();
   let pos=pos-2; }
   do Sys.wait(5); 
   return;
   }*/

     method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;

      //do moveAliens();

     /* while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSpaceship();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSpaceship();
         }
     }  */
     return;
   }



}